import { LengthPrefixedBytesLayoutItem } from "@wormhole-foundation/sdk-base";
import { RegisterPayloadTypes } from "../vaa";
export declare const messageLayout: <T extends number, C extends Pick<LengthPrefixedBytesLayoutItem, "custom">>(type: T, customContents?: C | undefined) => readonly [{
    readonly name: "magicByte";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 187;
    readonly omit: true;
}, {
    readonly name: "version";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 0;
    readonly omit: true;
}, {
    readonly name: "type";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: T;
    readonly omit: true;
}, {
    readonly name: "index";
    readonly binary: "uint";
    readonly size: 8;
}, {
    readonly custom: {
        to: (val: number) => "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky";
        from: (val: "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky") => number;
    };
    readonly binary: "uint";
    readonly size: 2;
    readonly name: "targetChain";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "targetAddress";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "senderAddress";
}, {
    readonly custom: any;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
} | {
    readonly custom?: undefined;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
}];
export declare const tokenMessageLayout: <C extends Pick<LengthPrefixedBytesLayoutItem, "custom">, B extends Pick<import("@wormhole-foundation/sdk-base").FixedPrimitiveNumLayoutItem<number, false> | import("@wormhole-foundation/sdk-base").OptionalToFromNumLayoutItem<number, false> | import("@wormhole-foundation/sdk-base").FixedPrimitiveNumLayoutItem<bigint, false> | import("@wormhole-foundation/sdk-base").OptionalToFromNumLayoutItem<bigint, false>, "custom">, A extends Pick<import("@wormhole-foundation/sdk-base").FixedPrimitiveNumLayoutItem<number, false> | import("@wormhole-foundation/sdk-base").OptionalToFromNumLayoutItem<number, false> | import("@wormhole-foundation/sdk-base").FixedPrimitiveNumLayoutItem<bigint, false> | import("@wormhole-foundation/sdk-base").OptionalToFromNumLayoutItem<bigint, false>, "custom">>(custom?: {
    contents?: C | undefined;
    bridge?: B | undefined;
    assetIdentifier?: A | undefined;
} | undefined) => readonly [{
    readonly name: "magicByte";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 187;
    readonly omit: true;
}, {
    readonly name: "version";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 0;
    readonly omit: true;
}, {
    readonly name: "type";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 1;
    readonly omit: true;
}, {
    readonly name: "index";
    readonly binary: "uint";
    readonly size: 8;
}, {
    readonly custom: {
        to: (val: number) => "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky";
        from: (val: "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky") => number;
    };
    readonly binary: "uint";
    readonly size: 2;
    readonly name: "targetChain";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "targetAddress";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "senderAddress";
}, {
    readonly custom: any;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
} | {
    readonly custom?: undefined;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
}, {
    readonly custom: any;
    readonly name: "bridge";
    readonly binary: "uint";
    readonly size: 1;
} | {
    readonly custom?: undefined;
    readonly name: "bridge";
    readonly binary: "uint";
    readonly size: 1;
}, {
    readonly custom: any;
    readonly name: "assetIdentifier";
    readonly binary: "uint";
    readonly size: 2;
} | {
    readonly custom?: undefined;
    readonly name: "assetIdentifier";
    readonly binary: "uint";
    readonly size: 2;
}, {
    readonly binary: "uint";
    readonly size: 32;
    readonly name: "amount";
}];
export declare const extendedMessageLayout: <C extends Pick<LengthPrefixedBytesLayoutItem, "custom">, R extends Pick<LengthPrefixedBytesLayoutItem, "custom">>(custom?: {
    contents?: C | undefined;
    relaySignal?: R | undefined;
} | undefined) => readonly [{
    readonly name: "magicByte";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 187;
    readonly omit: true;
}, {
    readonly name: "version";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 0;
    readonly omit: true;
}, {
    readonly name: "type";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 2;
    readonly omit: true;
}, {
    readonly name: "index";
    readonly binary: "uint";
    readonly size: 8;
}, {
    readonly custom: {
        to: (val: number) => "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky";
        from: (val: "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky") => number;
    };
    readonly binary: "uint";
    readonly size: 2;
    readonly name: "targetChain";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "targetAddress";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "senderAddress";
}, {
    readonly custom: any;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
} | {
    readonly custom?: undefined;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
}, {
    readonly custom: any;
    readonly name: "relaySignal";
    readonly binary: "bytes";
    readonly lengthSize: 2;
} | {
    readonly custom?: undefined;
    readonly name: "relaySignal";
    readonly binary: "bytes";
    readonly lengthSize: 2;
}];
export declare const namedPayloads: readonly [readonly ["Message", readonly [{
    readonly name: "magicByte";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 187;
    readonly omit: true;
}, {
    readonly name: "version";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 0;
    readonly omit: true;
}, {
    readonly name: "type";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 0;
    readonly omit: true;
}, {
    readonly name: "index";
    readonly binary: "uint";
    readonly size: 8;
}, {
    readonly custom: {
        to: (val: number) => "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky";
        from: (val: "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky") => number;
    };
    readonly binary: "uint";
    readonly size: 2;
    readonly name: "targetChain";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "targetAddress";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "senderAddress";
}, {
    readonly custom: any;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
} | {
    readonly custom?: undefined;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
}]], readonly ["TokenMessage", readonly [{
    readonly name: "magicByte";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 187;
    readonly omit: true;
}, {
    readonly name: "version";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 0;
    readonly omit: true;
}, {
    readonly name: "type";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 1;
    readonly omit: true;
}, {
    readonly name: "index";
    readonly binary: "uint";
    readonly size: 8;
}, {
    readonly custom: {
        to: (val: number) => "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky";
        from: (val: "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky") => number;
    };
    readonly binary: "uint";
    readonly size: 2;
    readonly name: "targetChain";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "targetAddress";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "senderAddress";
}, {
    readonly custom: any;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
} | {
    readonly custom?: undefined;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
}, {
    readonly custom: any;
    readonly name: "bridge";
    readonly binary: "uint";
    readonly size: 1;
} | {
    readonly custom?: undefined;
    readonly name: "bridge";
    readonly binary: "uint";
    readonly size: 1;
}, {
    readonly custom: any;
    readonly name: "assetIdentifier";
    readonly binary: "uint";
    readonly size: 2;
} | {
    readonly custom?: undefined;
    readonly name: "assetIdentifier";
    readonly binary: "uint";
    readonly size: 2;
}, {
    readonly binary: "uint";
    readonly size: 32;
    readonly name: "amount";
}]], readonly ["ExtendedMessage", readonly [{
    readonly name: "magicByte";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 187;
    readonly omit: true;
}, {
    readonly name: "version";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 0;
    readonly omit: true;
}, {
    readonly name: "type";
    readonly binary: "uint";
    readonly size: 1;
    readonly custom: 2;
    readonly omit: true;
}, {
    readonly name: "index";
    readonly binary: "uint";
    readonly size: 8;
}, {
    readonly custom: {
        to: (val: number) => "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky";
        from: (val: "Solana" | "Btc" | "Algorand" | "Sui" | "Aptos" | "Near" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Base" | "Sei" | "Rootstock" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky") => number;
    };
    readonly binary: "uint";
    readonly size: 2;
    readonly name: "targetChain";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "targetAddress";
}, {
    readonly binary: "bytes";
    readonly lengthSize: 2;
    readonly name: "senderAddress";
}, {
    readonly custom: any;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
} | {
    readonly custom?: undefined;
    readonly name: "contents";
    readonly binary: "bytes";
    readonly lengthSize: 2;
}, {
    readonly custom: any;
    readonly name: "relaySignal";
    readonly binary: "bytes";
    readonly lengthSize: 2;
} | {
    readonly custom?: undefined;
    readonly name: "relaySignal";
    readonly binary: "bytes";
    readonly lengthSize: 2;
}]]];
declare global {
    namespace WormholeNamespace {
        interface PayloadLiteralToLayoutMapping extends RegisterPayloadTypes<"BAM", typeof namedPayloads> {
        }
    }
}
//# sourceMappingURL=bam.d.ts.map