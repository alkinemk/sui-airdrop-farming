import { Chain } from "../chains";
import { Network } from "../networks";
import { TokenSymbol, TokenKey, ChainTokens, Token } from "./types";
export * from "./types";
export declare function getTokenMap<N extends Network, C extends Chain>(network: N, chain: C): ChainTokens | undefined;
export declare const isEqualCaseInsensitive: (a: string, b: string) => boolean;
export declare function getTokensBySymbol<N extends Network, C extends Chain>(network: N, chain: C, symbol: TokenSymbol): Token[] | undefined;
export declare function getTokenByKey<N extends Network, C extends Chain>(network: N, chain: C, key: TokenKey): Token | undefined;
export declare function getNativeToken<N extends Network, C extends Chain>(network: N, chain: C): Token | undefined;
export declare function getCanonicalToken<N extends Network, C extends Chain>(network: N, chain: C, key: TokenKey): Token | undefined;
export declare function getTokenByAddress<N extends Network, C extends Chain>(network: N, chain: C, address: string): Token | undefined;
//# sourceMappingURL=index.d.ts.map