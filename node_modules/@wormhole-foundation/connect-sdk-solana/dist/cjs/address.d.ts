import { Address, Platform, UniversalAddress } from '@wormhole-foundation/connect-sdk';
import { PublicKey } from '@solana/web3.js';
import { AnySolanaAddress } from './types';
export declare const SolanaZeroAddress = "11111111111111111111111111111111";
export declare class SolanaAddress implements Address {
    static readonly byteSize = 32;
    static readonly platform: Platform;
    readonly type: string;
    private readonly address;
    constructor(address: AnySolanaAddress);
    unwrap(): PublicKey;
    toString(): string;
    toUint8Array(): Uint8Array;
    toNative(): this;
    toUniversalAddress(): UniversalAddress;
    static instanceof(address: any): address is SolanaAddress;
    equals(other: SolanaAddress | UniversalAddress): boolean;
}
declare global {
    namespace WormholeNamespace {
        interface PlatformToNativeAddressMapping {
            Solana: SolanaAddress;
        }
    }
}
//# sourceMappingURL=address.d.ts.map