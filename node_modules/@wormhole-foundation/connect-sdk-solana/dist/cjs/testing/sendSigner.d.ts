import { Connection, Keypair, SendOptions } from '@solana/web3.js';
import { SignAndSendSigner, UnsignedTransaction } from '@wormhole-foundation/connect-sdk';
import { Network } from '@wormhole-foundation/sdk-base/src';
import { SolanaChains } from '../types';
export declare class SolanaSendSigner<N extends Network, C extends SolanaChains = 'Solana'> implements SignAndSendSigner<N, C> {
    private _rpc;
    private _chain;
    private _keypair;
    private _debug;
    private _sendOpts?;
    private _priotifyFeeAmount?;
    constructor(_rpc: Connection, _chain: C, _keypair: Keypair, _debug?: boolean, _sendOpts?: SendOptions | undefined, _priotifyFeeAmount?: bigint | undefined);
    chain(): C;
    address(): string;
    private retryable;
    signAndSend(tx: UnsignedTransaction[]): Promise<any[]>;
}
//# sourceMappingURL=sendSigner.d.ts.map